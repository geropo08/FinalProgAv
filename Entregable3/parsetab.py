
# parsetab.py
# This file is automatically generated. Do not edit.
# pylint: disable=W,C,R
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'ALL COMMA DOT EQUALS FRASE GREATER IDENTIFICADOR LESSER LPAREN NUMBER RPARENquery : elementoselementos : elementos elemento\n| elemento\nelemento : FRASE\n| IDENTIFICADOR\n| ALL\n| NUMBER\n| dot_notation\n\nelemento : elemento EQUALS elemento \n| elemento GREATER elemento\n| elemento LESSER elemento\nelemento : LPAREN lista_identificadores RPARENlista_identificadores : lista_identificadores COMMA IDENTIFICADOR\n| lista_identificadores COMMA NUMBER\n| elementodot_notation : IDENTIFICADOR DOT IDENTIFICADOR'
    
_lr_action_items = {'FRASE':([0,2,3,4,5,6,7,8,9,10,11,12,13,17,18,19,20,21,],[4,4,-3,-4,-5,-6,-7,-8,4,-2,4,4,4,-9,-10,-11,-16,-12,]),'IDENTIFICADOR':([0,2,3,4,5,6,7,8,9,10,11,12,13,14,17,18,19,20,21,22,],[5,5,-3,-4,-5,-6,-7,-8,5,-2,5,5,5,20,-9,-10,-11,-16,-12,23,]),'ALL':([0,2,3,4,5,6,7,8,9,10,11,12,13,17,18,19,20,21,],[6,6,-3,-4,-5,-6,-7,-8,6,-2,6,6,6,-9,-10,-11,-16,-12,]),'NUMBER':([0,2,3,4,5,6,7,8,9,10,11,12,13,17,18,19,20,21,22,],[7,7,-3,-4,-5,-6,-7,-8,7,-2,7,7,7,-9,-10,-11,-16,-12,24,]),'LPAREN':([0,2,3,4,5,6,7,8,9,10,11,12,13,17,18,19,20,21,],[9,9,-3,-4,-5,-6,-7,-8,9,-2,9,9,9,-9,-10,-11,-16,-12,]),'$end':([1,2,3,4,5,6,7,8,10,17,18,19,20,21,],[0,-1,-3,-4,-5,-6,-7,-8,-2,-9,-10,-11,-16,-12,]),'EQUALS':([3,4,5,6,7,8,10,16,17,18,19,20,21,],[11,-4,-5,-6,-7,-8,11,11,11,11,11,-16,-12,]),'GREATER':([3,4,5,6,7,8,10,16,17,18,19,20,21,],[12,-4,-5,-6,-7,-8,12,12,12,12,12,-16,-12,]),'LESSER':([3,4,5,6,7,8,10,16,17,18,19,20,21,],[13,-4,-5,-6,-7,-8,13,13,13,13,13,-16,-12,]),'RPAREN':([4,5,6,7,8,15,16,17,18,19,20,21,23,24,],[-4,-5,-6,-7,-8,21,-15,-9,-10,-11,-16,-12,-13,-14,]),'COMMA':([4,5,6,7,8,15,16,17,18,19,20,21,23,24,],[-4,-5,-6,-7,-8,22,-15,-9,-10,-11,-16,-12,-13,-14,]),'DOT':([5,],[14,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'query':([0,],[1,]),'elementos':([0,],[2,]),'elemento':([0,2,9,11,12,13,],[3,10,16,17,18,19,]),'dot_notation':([0,2,9,11,12,13,],[8,8,8,8,8,8,]),'lista_identificadores':([9,],[15,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> query","S'",1,None,None,None),
  ('query -> elementos','query',1,'p_query','traductorSQL.py',108),
  ('elementos -> elementos elemento','elementos',2,'p_elementos','traductorSQL.py',113),
  ('elementos -> elemento','elementos',1,'p_elementos','traductorSQL.py',114),
  ('elemento -> FRASE','elemento',1,'p_elemento','traductorSQL.py',122),
  ('elemento -> IDENTIFICADOR','elemento',1,'p_elemento','traductorSQL.py',123),
  ('elemento -> ALL','elemento',1,'p_elemento','traductorSQL.py',124),
  ('elemento -> NUMBER','elemento',1,'p_elemento','traductorSQL.py',125),
  ('elemento -> dot_notation','elemento',1,'p_elemento','traductorSQL.py',126),
  ('elemento -> elemento EQUALS elemento','elemento',3,'p_comparacion','traductorSQL.py',132),
  ('elemento -> elemento GREATER elemento','elemento',3,'p_comparacion','traductorSQL.py',133),
  ('elemento -> elemento LESSER elemento','elemento',3,'p_comparacion','traductorSQL.py',134),
  ('elemento -> LPAREN lista_identificadores RPAREN','elemento',3,'p_parentesis2','traductorSQL.py',141),
  ('lista_identificadores -> lista_identificadores COMMA IDENTIFICADOR','lista_identificadores',3,'p_lista_identificadores','traductorSQL.py',145),
  ('lista_identificadores -> lista_identificadores COMMA NUMBER','lista_identificadores',3,'p_lista_identificadores','traductorSQL.py',146),
  ('lista_identificadores -> elemento','lista_identificadores',1,'p_lista_identificadores','traductorSQL.py',147),
  ('dot_notation -> IDENTIFICADOR DOT IDENTIFICADOR','dot_notation',3,'p_dot_notation','traductorSQL.py',154),
]
